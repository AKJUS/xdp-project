# -*- fill-column: 76; -*-
#+TITLE: Project management for XDP-tutorial
#+OPTIONS: ^:nil

* TODO XDP-tutorial ideas for assignments/examples

** NEXT xdp-tutorial: rebase libbpf to get AF_XDP headers

** TODO xdp-tutorial: Add AF_XDP tutorial example
Initial step PR: https://github.com/xdp-project/xdp-tutorial/pull/35

** TODO xdp-tutorial: add tracepoint examples for reading XDP tracepoints

The XDP infra depend on some tracepoints for stats, debugging and
troubleshooting XDP. E.g. see the kernel/samples/bpf program xdp_monitor
([[https://github.com/torvalds/linux/blob/master/samples/bpf/xdp_monitor_kern.c][xdp_monitor_kern.c]] and [[https://github.com/torvalds/linux/blob/master/samples/bpf/xdp_monitor_user.c][xdp_monitor_user.c]]).

But the issue is that xdp_monitor (and other trace samples) use another ELF
loader than libbpf (the samples local [[https://github.com/torvalds/linux/blob/master/samples/bpf/bpf_load.c][bpf_load.c]]), which we want to move
people way from.

Tutorial already covers load BPF programs, but attaching to tracepoints need
to be covered by tutorial. Attaching to tracepoints is a multi-step process,
that involves reading an id from debugfs, using sys_perf_event_open, and
calling some =ioctl()= events.

Ultimately we should consider adding to libbpf, tracepoint attach helper
functions, to hide these multi-step attach steps. For the purpose of the
tutorial we can demonstrate the steps, and have several tracing0x
assignments that abstract and generalise this.  Notice functions that we
consider upstreaming to libbpf are placed in [[https://github.com/xdp-project/xdp-tutorial/blob/master/common/common_libbpf.c][common/common_libbpf.c]].

Another consideration: We should promote using raw_tracepoints for BPF as it
have much less overhead for getting info that BPF need.

* TODO XDP-tutorial diverse assignments

** TODO XDP-tutorial: Code xdp_stats to use/follow XDP bpf-id to maps

Update basic04 xdp_stats via XDP-id

** TODO XDP-tutorial: drawing and desc of veth-testlab

** TODO XDP-tutorial: diagnose via tracepoints

Issue libbpf don't have any helpers for attaching to tracepoints.
