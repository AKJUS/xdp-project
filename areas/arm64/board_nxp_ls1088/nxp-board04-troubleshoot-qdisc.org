# -*- fill-column: 76; -*-
#+Title: NXP LS1088A - Troubleshooting qdisc network problem
#+OPTIONS: ^:nil

Board LS1088ARDB-PB.
- SoC: LS1088AE Rev1.0 (0x87030010)

* Issue: No network due to missing qdisc

On devel kernel v5.7-rc1 board cannot transmit packets. This is due to
default qdisc not getting assigned correctly, resulting in device driver
dpaa2-eth getting assigned qdisc =noop=.

#+begin_example
root@LS1088ARDB-PB:~# ip link show dev eth0
3: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noop state UP mode DEFAULT group default qlen 1000
    link/ether 00:04:9f:06:08:f0 brd ff:ff:ff:ff:ff:ff
#+end_example

** Workaround manual

The workaround is to manually install a qdisc on the board via serial port:
#+begin_src sh
tc qdisc add dev eth0 root pfifo
#+end_src

* Issue triggered by default_qdisc

All modern distros have switched to fq_codel, via changing the default_qdisc
via sysctl (/proc/sys/net/core/default_qdisc).

#+begin_src sh
# sysctl net/core/default_qdisc=fq_codel
#+end_src

On this Ubuntu (18.04) system it is configured under:
=/usr/lib/sysctl.d/50-default.conf=

For some unknown reason, when adding qdisc fq_codel to dpaa2-eth it fails.
If I change the sysctl net/core/default_qdisc to pfifo_fast, then it works
fine.

** Workaround setup

One can workaround via changing the sysctl config, and compile kernel with
config option:
#+begin_example
CONFIG_DEFAULT_NET_SCH="pfifo_fast"
#+end_example


* Troubleshoot: iproute2 tc version

Ideas: Is 'tc' (iproute2) version too old?
#+begin_example
root@LS1088ARDB-PB:~# apt show iproute2
Package: iproute2
Version: 4.15.0-2ubuntu1
[...]
#+end_example

Git clone git://git.kernel.org/pub/scm/network/iproute2/iproute2.git
and compile newest version of tc.

Try old 'tc' and new 'tc' version:
#+begin_example
root@LS1088ARDB-PB:~# tc qdisc add dev eth0 root fq_codel
RTNETLINK answers: Invalid argument

root@LS1088ARDB-PB:~/git/iproute2/tc# ./tc qdisc add dev eth0 root fq_codel
RTNETLINK answers: Invalid argument
#+end_example

This indicate that it is not =tc= version related.

* Troubleshoot: via ftrace trace-cmd

We can reproduce issue when =default_qdisc= is =fq_codel= and loading the
=mq= qdisc (as assigning a single =fq_codel= root qdisc will be a
performance issue on TX for the net_device).

#+begin_src sh
# tc qdisc del dev eth0 root
# tc qdisc add dev eth0 root mq
#+end_src

** Setup ftrace trace-cmd

System doesn't have trace-cmd (and apt-get it somehow broke on sdcard).
Git clone and compile:

#+begin_src sh
git clone git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/trace-cmd.git
cd trace-cmd
make
make install
#+end_src

System also didn't have mounted the /sys/kernel/tracing directory:
#+begin_src sh
mount -t tracefs nodev /sys/kernel/tracing
#+end_src

** Ftrace: mq_init

Pick kernel function =mq_init= that we know gets called when assigning =mq=
qdisc. Use ftrace =trace-cmd= to track this function call.

Record sequence (via serial console):
#+begin_src sh
trace-cmd record -p function_graph -g mq_init &
sleep 3
tc qdisc add dev eth0 root mq
#+end_src

Partial output from =trace-cmd report=:
#+begin_example
 |  mq_init() {
 |    __kmalloc() {
 |      kmalloc_slab();
 |      should_failslab();
 |      memcg_kmem_put_cache();
 |    }
 |    qdisc_create_dflt() {
 |      try_module_get();
 |      qdisc_alloc() {
 |        __kmalloc_node() {
 |          kmalloc_slab();
 |          should_failslab();
 |          memcg_kmem_put_cache();
 |        }
 |      }
 |      fq_codel_init() {
 |        tcf_block_get() {
 |          tcf_block_get_ext() {
 [...]
 |            }
 |          }
 |        }
 |      }
 |      qdisc_put.part.47() {
 |        qdisc_destroy() {
 |          qdisc_hash_del() {
 |            gic_handle_irq() {
 |              handle_IPI() {
#+end_example

In =qdisc_create_dflt()= the =qdisc_put(sch)= only happens when
the =ops->init= operation fails:
#+begin_src C
struct Qdisc *qdisc_create_dflt(struct netdev_queue *dev_queue,
				const struct Qdisc_ops *ops,
				unsigned int parentid,
				struct netlink_ext_ack *extack)
{
	[... cut ...]
	if (!ops->init || ops->init(sch, NULL, extack) == 0)
		return sch;

	qdisc_put(sch);
	return NULL;
}
#+end_src

** Ftrace: fq_codel_init

Lets zoom in on =fq_codel_init()= as previous ftrace shows this function
call fails (for a yet unknown reason).

#+begin_src sh
trace-cmd record -p function_graph -g fq_codel_init &
sleep 4
tc qdisc add dev eth0 root fq_codel
kill %1
#+end_src

trace-cmd report:
#+begin_example
 |  fq_codel_init() {
 |    fq_codel_change() {
 |      rtnl_is_locked() {
 |        mutex_is_locked();
 |      }
 |      _raw_spin_lock_bh();
 |      qdisc_tree_reduce_backlog();
 |      rtnl_is_locked() {
 |        mutex_is_locked();
 |      }
 |      _raw_spin_unlock_bh() {
 |        __local_bh_enable_ip();
 |      }
 |    }
 |    tcf_block_get() {
 |      tcf_block_get_ext() {
 |        kmem_cache_alloc_trace() {
 |          should_failslab();
 |          memcg_kmem_put_cache();
 |        }
 |        __mutex_init();
 |        __mutex_init();
 |        __init_rwsem();
 |        kmem_cache_alloc_trace() {
 |          should_failslab();
 |          memcg_kmem_put_cache();
 |        }
 |        kmem_cache_alloc_trace() {
 |          should_failslab();
 |          memcg_kmem_put_cache();
 |        }
 |        mutex_lock();
 |        mutex_unlock();
 |        down_write();
 |        tcf_block_offload_cmd.isra.52() {
 |          dpaa2_eth_setup_tc();
NOTICE XXX  ^^^^^^^^^^^^^^^^^^^^

 |        }
 |        up_write();
 |        tcf_chain0_head_change_cb_del.isra.56() {
 |          mutex_lock();
 |          mutex_unlock();
 |          kfree();
 |        }
 |        tcf_block_owner_del() {
 |          kfree();
 |        }
 |        __tcf_block_put() {
 |          mutex_lock();
 |          mutex_unlock();
 |          kfree_call_rcu() {
 |            _raw_spin_lock();
 |            queue_delayed_work_on() {
 |              __queue_delayed_work() {
 |                add_timer() {
 |                  lock_timer_base() {
 |                    _raw_spin_lock_irqsave();
 |                  }
 |                  detach_if_pending();
 |                  get_nohz_timer_target();
 |                  __internal_add_timer() {
 |                    calc_wheel_index();
 |                    enqueue_timer();
 |                  }
 |                  trigger_dyntick_cpu.isra.33();
 |                  _raw_spin_unlock_irqrestore();
 |                }
 |              }
 |            }
 |            _raw_spin_unlock();
 |          }
 |        }
 |      }
 |    }
 |  }
#+end_example

This is driver related, because (deep) TC init code-path calls
=ndo_setup_tc=, which calls driver =dpaa2_eth_setup_tc()=.
