#+Title: Investigating AMD CPU overhead

See intro in [[file:traits01_bench_kmod.org]].

* AMD CPU under test

AMD EPYC 9684X 96-Core Processor

** Details on CPU

#+begin_src
Architecture:             x86_64
  CPU op-mode(s):         32-bit, 64-bit
  Address sizes:          46 bits physical, 57 bits virtual
  Byte Order:             Little Endian
CPU(s):                   192
  On-line CPU(s) list:    0-191
Vendor ID:                AuthenticAMD
  Model name:             AMD EPYC 9684X 96-Core Processor
    CPU family:           25
    Model:                17
    Thread(s) per core:   2
    Core(s) per socket:   96
    Socket(s):            1
    Stepping:             2
 [... cut ...]
Caches (sum of all):
  L1d:                    3 MiB (96 instances)
  L1i:                    3 MiB (96 instances)
  L2:                     96 MiB (96 instances)
  L3:                     1.1 GiB (12 instances)
NUMA:
  NUMA node(s):           12
  NUMA node0 CPU(s):      0-7,96-103
  NUMA node1 CPU(s):      8-15,104-111
  NUMA node2 CPU(s):      16-23,112-119
  NUMA node3 CPU(s):      24-31,120-127
  NUMA node4 CPU(s):      32-39,128-135
  NUMA node5 CPU(s):      40-47,136-143
  NUMA node6 CPU(s):      48-55,144-151
  NUMA node7 CPU(s):      56-63,152-159
  NUMA node8 CPU(s):      64-71,160-167
  NUMA node9 CPU(s):      72-79,168-175
  NUMA node10 CPU(s):     80-87,176-183
  NUMA node11 CPU(s):     88-95,184-191
Vulnerabilities:
  Gather data sampling:   Not affected
  Itlb multihit:          Not affected
  L1tf:                   Not affected
  Mds:                    Not affected
  Meltdown:               Not affected
  Mmio stale data:        Not affected
  Reg file data sampling: Not affected
  Retbleed:               Not affected
  Spec rstack overflow:   Mitigation; Safe RET
  Spec store bypass:      Mitigation; Speculative Store Bypass disabled via prctl
  Spectre v1:             Mitigation; usercopy/swapgs barriers and __user pointer sanitization
  Spectre v2:             Mitigation; Enhanced / Automatic IBRS; IBPB conditional; STIBP always-
                          on; RSB filling; PBRSB-eIBRS Not affected; BHI Not affected
  Srbds:                  Not affected
  Tsx async abort:        Not affected
#+end_src

