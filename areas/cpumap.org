# -*- fill-column: 76; -*-
#+TITLE: Project management for CPUMAP
#+CATEGORY: CPUMAP
#+OPTIONS: ^:nil

This document contains *org-mode tasks* and TODOs for [[https://github.com/torvalds/linux/blob/master/kernel/bpf/cpumap.c][cpumap]].

This BPF map type CPUMAP (=BPF_MAP_TYPE_CPUMAP=) is used by XDP to
=XDP_REDIRECT= into via BPF helper =bpf_redirect_map()=. This map type
redirects raw XDP frames to another CPU. The remote CPU will do
SKB-allocation and call the normal network stack.

This is a scalability and isolation mechanism, that allow separating the
early driver network XDP layer, from the rest of the netstack, and assigning
dedicated CPUs for this stage. This basically allows for 10G wirespeed
pre-filtering via bpf, on the serving end-host running Linux.

* Allocate SKB outside driver code

The revolutionary and controversial idea with cpumap redirect is to remove
the SKB allocation inside the drivers RX-path. Instead an =xdp_frame= is
created that contains enough info to allocated the SKB later outside the
driver code, in cpumap's case on a remote CPU, but the idea is to take this
even further.

*The future plans* are working towards creating Ethernet drivers that have
no SKB allocations. Instead they will send these =xdp_frame= packets (in a
bulk) to the network stack, that will handle creation of the SKBs and
populate the appropriate SKB-fields. This work is currently stalled on a
generic way to transfer info needed for the SKB-fields, this related to XDP
*metadata* and *BTF* working areas.

* TODO Project cpumap

Tasks related to =cpumap= are filed under this section.

