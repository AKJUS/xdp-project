# -*- fill-column: 79; -*-
#+TITLE: Scaling Software Rate Limiting across CPU cores
#+AUTHOR: Jonas Köppeler <j.koeppeler@tu-berlin.de> and Toke Høiland-Jørgensen <toke@redhat.com>
#+EMAIL: j.koeppeler@tu-berlin.de, toke@redhat.com
#+REVEAL_THEME: white
#+REVEAL_TRANS: linear
#+REVEAL_MARGIN: 0
#+REVEAL_ROOT: ../reveal.js
#+OPTIONS: reveal_center:t reveal_control:t reveal_history:nil
#+OPTIONS: reveal_width:1600 reveal_height:900
#+OPTIONS: ^:nil tags:nil toc:nil num:nil ':t

* For conference: NetDevconf 0x19 2025                             :noexport:

This presentation is for Netdevconf 0x19 in Zagreb, Croatia

* Outline / ideas                                                  :noexport:

* Motivation                                                         :export:
#+ATTR_REVEAL: :frag (appear)
- Network speeds >> CPU speeds
- Scaling software rate limiting is challenging
    #+ATTR_REVEAL: :frag (appear)
    - ... especially enforcing a global rate limit on a network interface

#+ATTR_REVEAL: :frag (appear)
- Existing qdiscs in the kernel cannot keep up with network speeds
    #+ATTR_REVEAL: :frag (appear)
    - ... and do not scale

** CAKE and HTB                                                     :export:

#+ATTR_html: :height 620
#+CAPTION: 20 Gbps rate limit, UDP flood with full MTU-sized packets
[[file:htb_cake_scaling.svg]]

** Motivation (cont.)                                               :export:
#+ATTR_REVEAL: :frag (appear)
- A solution like EDT-BPF is great for rate limiting flow aggregates on end hosts
    #+ATTR_REVEAL: :frag (appear)
    - ... but falls short in enforcing a global rate limit
    - builds a virtual FIFO across queues
    - negative effects on latencies

** EDT-BPF                                                          :export:

#+ATTR_html: :height 620
#+CAPTION: 20 Gbps rate limit, 1024 TCP streams
[[file:edt-global-rate-limit.svg]]

* We present: mq-cake                                                :export:

#+ATTR_REVEAL: :frag (appear)
- Multi-queue compatible variant of sch_cake
- Enforce high rate limits while keeping queues smart

* Outline                                                            :export:
- Design
- Evaluation
- Outlook

* Design                                                             :export:

** Architecture
#+ATTR_html: :height 620
#+CAPTION: Four hardware queues, mq-cake instances connected via linked list
[[file:mq-cake-paper/images/mq_cake_architecture.svg]]

** Algorithm                                                        :export:
#+ATTR_REVEAL: :frag (appear)
- Every instance loops over linked list in certain intervals
  - Interval called synctime
- Determine if other mq-cake instances are active
- Calculate new local rate:
#+ATTR_REVEAL: :frag (appear)
$$rate_{local}=\frac{rate_{global}}{\text{# active qdiscs}}$$

** Active qdisc
- A qdisc is considered active if:
    #+ATTR_REVEAL: :frag (appear)
    - packets are backlogged, or
    - packets were sent since last scan

* Evaluation                                                         :export:
** Rate Conformance
#+ATTR_html: :height 620
#+CAPTION: 40 queues, UDP flood with full MTU-sized packets
[[file:rate_conformance_slides.svg]]

** Deviation
#+ATTR_html: :height 620
#+CAPTION: 40 queues, UDP flood with full MTU-sized packets
[[file:deviation_slides.svg]]

** Scaling
#+ATTR_html: :height 620
#+CAPTION: 20 Gbps rate limit, UDP flood with 64 byte packets
[[file:txq_slides.svg]]

** Latencies
#+ATTR_html: :height 620
#+CAPTION: 1024 TCP streams, 2s drop horizon for EDT-BPF
[[file:ping-edtbpf-mqcake-2s-horizon-20000-log.svg]]


* Impact of Synctime                                                 :export:

** Synctime 10us
#+ATTR_html: :height 620
#+CAPTION: Switching from 4 to 40 active qdiscs
[[file:mq-cake-paper/images/switching_10us.svg]]

** Synctime 100us
#+ATTR_html: :height 620
#+CAPTION: Switching from 4 to 40 active qdiscs
[[file:mq-cake-paper/images/switching_100us.svg]]

** Synctime 100ms
#+ATTR_html: :height 620
#+CAPTION: Switching from 4 to 40 active qdiscs
[[file:mq-cake-paper/images/switching_100ms.svg]]

* Current Limitations                                                :export:

** Imbalances
#+ATTR_html: :height 620
#+CAPTION: Imbalance in traffic load between qdiscs
[[file:imbalances.svg]]

** Synchronization overhead
#+ATTR_html: :height 620
#+CAPTION: Lower synctimes lead to higher CPU overhead
[[file:sync_overhead.svg]]

* Outlook                                                            :export:

** Future Work
#+ATTR_REVEAL: :frag (appear)
- Tackle imbalance issue
- Mitigate overshoot during switching events
- Test under real-world conditions
- Automatically determine best synctime value

** Upstreaming Plans



* Emacs end-tricks                                                 :noexport:

This section contains some emacs tricks, that e.g. remove the "Slide:" prefix
in the compiled version.

# Local Variables:
# org-re-reveal-title-slide: "<h1 class=\"title\">%t</h1> Jonas Köppeler - TU Berlin <br /> Toke Høiland-Jørgensen - Red Hat"
# org-export-filter-headline-functions: ((lambda (contents backend info) (replace-regexp-in-string "Slide: " "" contents)))
# End:
