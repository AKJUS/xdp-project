# -*- fill-column: 79; -*-
#+TITLE: XDP and BPF insights
#+AUTHOR: Jesper Dangaard Brouer <hawk@kernel.org>
#+EMAIL: brouer@redhat.com
#+REVEAL_THEME: redhat
#+REVEAL_TRANS: linear
#+REVEAL_MARGIN: 0
#+REVEAL_EXTRA_CSS: ../reveal.js/css/theme/asciinema-player.css
#+REVEAL_EXTRA_JS: { src: '../reveal.js/js/redhat.js'}
#+REVEAL_ROOT: ../reveal.js
#+OPTIONS: reveal_center:nil reveal_control:t reveal_history:nil
#+OPTIONS: reveal_width:1600 reveal_height:900
#+OPTIONS: ^:nil tags:nil toc:nil num:nil ':t


* For conference: Tech Summit at Fastly                            :noexport:

Request from Fastly engineer Sanjay Rao (know from Netfilter workshop):
#+begin_quote
They asked me to find out if you could do a virtual talk at our upcoming
"Tech Summit", October 4-6
#+end_quote

Title: XDP and BPF insights
 - Programmable Runtime Extending Linux Kernel for Packet Processing

** Abstract:

This talk will give an insights into BPF and XDP (eXpress Data Path)
technologies.

These technologies are changing the traditional Operating System model.

The Linux Kernel is becoming programmable and runtime extendable,
without the risk of crashing the kernel. BPF is a sandbox technology
that provide an alternative to Kernel modules.

These technologies push the limits on what is possible for fast
programmable packet processing in the Operating System Kernel.

Talk will also cover future work and planned extensions to XDP.

* Colors in slides                                                 :noexport:

Text colors on slides are chosen via org-mode italic/bold high-lighting:
 - /italic/ = /green/
 - *bold*   = *yellow*
 - */italic-bold/* = red

* Brainstorm notes                                                 :noexport:

Make them aware of BPF/XDP communities
 - Mention: xdp-newbies@vger.kernel.org

BPF 7-years (and XDP 5 years)
 - Congrats, *but* evolution of BPF features
 - Evolved
 - Resulted in many out-dated Google search articles
 - Old outdated approaches are used as best-practices 

* Slide: Overview: What will you /learn/?                            :export:

First part: Covers *what is BPF?*
 - How this technology fundamentally change the existing OS-model

*/FIXME/*: Add MORE to this slide

* Slide: What is BPF ?                                               :export:

From: https://ebpf.io/what-is-ebpf
#+begin_quote
eBPF is a revolutionary technology that can run sandboxed programs in the Linux
kernel without changing kernel source code or loading a kernel module
#+end_quote

/BPF/ is a *technology name*: */no longer an acronym/*

*Rate of innovation* at the operating system level: */Traditionally slow/*
 - BPF enables things at OS-level that were not possible before
 - BPF will /radically increase/ rate of innovation

** Slide: *Traditional* Kernel development process

[[file:images/bpf_comic01_scale.png]]

** Slide: *BPF* development process

[[file:images/bpf_comic02_scale.png]]



* Emacs end-tricks                                                 :noexport:

This section contains some emacs tricks, that e.g. remove the "Slide:" prefix
in the compiled version.

# Local Variables:
# org-re-reveal-title-slide: "<h1 class=\"title\">%t</h1>
# <h3 class=\"title\">Programmable Runtime Extending Linux Kernel for Packet Processing</h3>
# <h2 class=\"author\">Jesper Dangaard Brouer<br/>Senior Principal Kernel Engineer</h2>
# <h3>Tech Summit, Fastly</br>October 2021</h3>"
# org-export-filter-headline-functions: ((lambda (contents backend info) (replace-regexp-in-string "Slide: " "" contents)))
# End:
