# -*- fill-column: 79; -*-
#+TITLE: XDP: the Distro View
#+AUTHOR: Jiri Benc, Jesper Dangaard Brouer and Toke Høiland-Jørgensen
#+EMAIL: jbenc@redhat.com
#+REVEAL_THEME: redhat
#+REVEAL_TRANS: linear
#+REVEAL_MARGIN: 0
#+REVEAL_EXTRA_JS: { src: '../reveal.js/js/redhat.js'}
#+REVEAL_ROOT: ../reveal.js
#+OPTIONS: reveal_center:nil reveal_control:t reveal_history:nil
#+OPTIONS: reveal_width:1600 reveal_height:900
#+OPTIONS: ^:nil tags:nil toc:nil num:nil ':t

This is currently notes for the LinuxPlumbersConf 2019 (LPC) presentation (see
title), and perhaps the slide deck (depending on Jiri Benc's preferences for
formatting tools).

https://www.linuxplumbersconf.org/event/4/contributions/460/

* Export/generate presentation

** Setup for org export to reveal.js
First, install the ox-reveal emacs package.

Package: ox-reveal git-repo and install instructions:
https://github.com/yjwen/org-reveal

To export hit =C-c C-e R R=, then open .html file to view slideshow.

The variables at document end ("Local Variables") will set up the title slide
and filter the "Slide:" prefix from headings; Emacs will ask for permission to
load them, as they will execute code.

** Export to PDF

The conference requires presentations to be delivered in PDF format.  Usually
the reveal.js when run as a webserver under nodejs, have a printer option for
exporting to PDF vai print to file, but we choose not run this builtin
webserver.

Alternatively I found a tool called 'decktape', for exporting HTML pages to
PDF: https://github.com/astefanutti/decktape

The 'npm install' failed on my system:

 $ npm install decktape

But (after running npm update) I can start the decktape.js file direct via
the 'node' command.

 $ node ~/git/decktape/decktape.js slides.html slides.pdf

This is the command needed on Arch - size is set to get slide text to fit on
the page. -p 100 makes it go faster.

$ decktape -s 1600x900 -p 100 --chrome-arg=--no-sandbox slides.html slides.pdf



* Colors in slides                                                 :noexport:
Text colors on slides are chosen via org-mode italic/bold high-lighting:
 - /italic/ = /green/
 - *bold*   = *yellow*
 - */italic-bold/* = red

* Slides below                                                     :noexport:

Only sections with tag ":export:" will end-up in the presentation. The prefix
"Slide:" is only syntax-sugar for the reader (and it removed before export by
emacs).

* Slide: Outline                                                     :export:
:PROPERTIES:
:reveal_extra_attr: class="mid-slide"
:END:

xxx

** Slide: What is XDP?                                              :export:

#+BEGIN_NOTES
People should already know this; but since we already have the slide, might as
well include it.
#+END_NOTES

XDP basically: *New layer in the kernel network stack*
 - Before allocating the SKB
 - Driver level hook at DMA level

Means: Competing at the same “layer” as DPDK / netmap
 - Super fast, due to
   - Take action/decision earlier (e.g. skip some network layers)
   - No memory allocations

/Not kernel bypass/; data-plane is kept inside the kernel
 - Via eBPF: makes early network stack *run-time programmable*
 - Cooperates with the kernel stack

* Notes

** Org-mode hints

https://orgmode.org/manual/Quoting-HTML-tags.html#Quoting-HTML-tags

** Colors from Red Hat guide lines

Red Hat Colors:

 - Red Hat Red #cc0000
 - Medium Red #a30000
 - Dark Red #820000

None of these red colors fit with baggrond color:
 - Using red 65% #ff4d4d
 - Found via: https://www.w3schools.com/colors/colors_picker.asp

Secondary Palette:

 - Dark Blue #004153
 - Medium Blue #4e9fdd
 - Light Blue #5bc6e8
 - Lighter Blue #a3dbe8

Accent Palette:

 - Purple #3b0083
 - Orange #ec7a08
 - Green #7ab800
 - Turquoise #007a87
 - Yellow #fecb00

# Local Variables:
# org-reveal-title-slide: "<h1 class=\"title\">%t</h1><h2
# class=\"author\">Jiri Benc<br/>Jesper Dangaard Brouer<br/>Toke Høiland-Jørgensen</h2>
# <h3>Red Hat inc<br/>Linux Plumbers Conf<br/>Sep 2019</h3>"
# org-export-filter-headline-functions: ((lambda (contents backend info) (replace-regexp-in-string "Slide: " "" contents)))
# End:
